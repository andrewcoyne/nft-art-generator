#include <iostream>
#include <filesystem>
#include <thread>
#include "Manager.hpp"
#include "Settings.hpp"

int main (int argc, char* argv[]) {
    if (argc < 2 || std::filesystem::exists(argv[1])) {
        std::cerr << "Error: No settings file provided." << std::endl;
        return 1;
    }

    Settings settings (argv[1]);
    try {
        settings.init();
    } catch (std::runtime_error& e) {
        std::cerr << "Error: Settings file could not be processed - " << e.what() << std::endl;
        return 1;
    }

    // Evenly distribute the number of images to be generated by each thread
    uint32_t numPerThread = settings.get_num_nft() / std::thread::hardware_concurrency(); 
    // Get remainder, to be distributed evenly among available threads
    uint32_t extraImg = settings.get_num_nft() % std::thread::hardware_concurrency();
    
    Manager m (std::ref(settings));
    m.init_threads(numPerThread, extraImg);

    return 0;
}