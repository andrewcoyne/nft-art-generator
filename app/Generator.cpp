#include <iostream>
#include <filesystem>
#include <thread>
#include <memory>
#include "Manager.hpp"
#include "Settings.hpp"

int main (int argc, char* argv[]) {
    if (argc < 2 || std::filesystem::exists(argv[1])) {
        std::cerr << "Error: No settings file provided." << std::endl;
        return 1;
    }

    std::shared_ptr<Settings> settings (new Settings(argv[1]));
    if (!settings) {
        std::cerr << "Error: Could not read provided settings file." << std::endl;
        return 1;
    }

    // Evenly distribute the number of images to be generated by each thread
    uint numPerThread = settings->NUM_NFT / std::thread::hardware_concurrency(); 
    uint extra = settings->NUM_NFT % std::thread::hardware_concurrency();
    
    Manager m (settings);
    m.init_threads(numPerThread, extra);
    m.run();

    return 0;
}